{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marlonfalcon/Desktop/ttpc_login/src/components/AuthRoute.js\";\n// Dashboard cannot be accessed unless logged in\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst AuthRoute = ({\n  children,\n  authenticated,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => authenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AuthRoute;\n\nconst mapStateToProps = ({\n  session\n}) => ({\n  authenticated: session.authenticated\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["/Users/marlonfalcon/Desktop/ttpc_login/src/components/AuthRoute.js"],"names":["Route","Redirect","connect","AuthRoute","children","authenticated","rest","location","pathname","state","from","mapStateToProps","session"],"mappings":";;AAAA;AAEA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,aAAX;AAA0B,KAAGC;AAA7B,CAAD,KAAwC;AACtD,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EACF,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAgBF,aAAa,GAAID,QAAJ,gBACzB,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAI,QAAAA,QAAQ,EAAE,QADV;AAEAC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH;AAAP;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhBD;;KAAMJ,S;;AAkBN,MAAMQ,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAe;AACnCP,EAAAA,aAAa,EAAEO,OAAO,CAACP;AADY,CAAf,CAAxB;;AAIA,eAAeH,OAAO,CAACS,eAAD,CAAP,CAAyBR,SAAzB,CAAf","sourcesContent":["// Dashboard cannot be accessed unless logged in\r\n\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst AuthRoute = ({children, authenticated, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                ({location}) => authenticated ? (children) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: {from: location}\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({session}) =>({\r\n    authenticated: session.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);"]},"metadata":{},"sourceType":"module"}