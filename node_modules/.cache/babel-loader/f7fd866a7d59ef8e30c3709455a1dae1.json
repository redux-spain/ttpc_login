{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marlonfalcon/Desktop/ttpc_login/src/components/FormLib.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useField } from \"formik\";\nimport { StyledTextInput, StyledLabel, StyledIcon, ErrorMsg } from \"./../components/Styles\"; // Eye for password\n\nimport { FiEyeOff, FiEye } from \"react-icons/fi\";\nexport const TextInput = ({\n  icon,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), props.type !== \"password\" && /*#__PURE__*/_jsxDEV(StyledTextInput, {\n      invalid: meta.touched && meta.error,\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), props.type === \"password\" && /*#__PURE__*/_jsxDEV(StyledTextInput, {\n      invalid: meta.touched && meta.error,\n      ...field,\n      ...props,\n      type: show ? \"text\" : \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), props.type === \"password\" && /*#__PURE__*/_jsxDEV(StyledIcon, {\n      onClick: () => setShow(!show),\n      right: true,\n      children: [show && /*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this), !show && /*#__PURE__*/_jsxDEV(FiEyeOff, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ErrorMsg, {\n      style: {\n        visibility: \"hidden\"\n      },\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextInput, \"9eRIAVGyCrqByaFfiB06D/xZ1lY=\", false, function () {\n  return [useField];\n});\n\n_c = TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/marlonfalcon/Desktop/ttpc_login/src/components/FormLib.js"],"names":["useState","useField","StyledTextInput","StyledLabel","StyledIcon","ErrorMsg","FiEyeOff","FiEye","TextInput","icon","props","field","meta","show","setShow","position","name","label","type","touched","error","visibility"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,QAJF,QAKO,wBALP,C,CAOA;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,gBAAhC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAD,KAAwB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBX,QAAQ,CAACS,KAAD,CAA9B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEL,KAAK,CAACM,IAA5B;AAAA,gBAAmCN,KAAK,CAACO;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,EAGGP,KAAK,CAACQ,IAAN,KAAe,UAAf,iBACC,QAAC,eAAD;AACE,MAAA,OAAO,EAAEN,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KADhC;AAAA,SAEMT,KAFN;AAAA,SAGMD;AAHN;AAAA;AAAA;AAAA;AAAA,YAJJ,EAWGA,KAAK,CAACQ,IAAN,KAAe,UAAf,iBACC,QAAC,eAAD;AACE,MAAA,OAAO,EAAEN,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KADhC;AAAA,SAEMT,KAFN;AAAA,SAGMD,KAHN;AAIE,MAAA,IAAI,EAAEG,IAAI,GAAG,MAAH,GAAY;AAJxB;AAAA;AAAA;AAAA;AAAA,YAZJ,eAoBE,QAAC,UAAD;AAAA,gBAAaJ;AAAb;AAAA;AAAA;AAAA;AAAA,YApBF,EAsBGC,KAAK,CAACQ,IAAN,KAAe,UAAf,iBACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,CAACD,IAAF,CAAlC;AAA2C,MAAA,KAAK,MAAhD;AAAA,iBACGA,IAAI,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADX,EAEG,CAACA,IAAD,iBAAS,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,EA6BGD,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KAArB,gBACC,QAAC,QAAD;AAAA,gBAAWR,IAAI,CAACQ;AAAhB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAzCM;;GAAMb,S;UACWP,Q;;;KADXO,S","sourcesContent":["import { useState } from \"react\";\r\nimport { useField } from \"formik\";\r\nimport {\r\n  StyledTextInput,\r\n  StyledLabel,\r\n  StyledIcon,\r\n  ErrorMsg,\r\n} from \"./../components/Styles\";\r\n\r\n// Eye for password\r\nimport { FiEyeOff, FiEye } from \"react-icons/fi\";\r\n\r\nexport const TextInput = ({ icon, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <StyledLabel htmlFor={props.name}>{props.label}</StyledLabel>\r\n\r\n      {props.type !== \"password\" && (\r\n        <StyledTextInput\r\n          invalid={meta.touched && meta.error}\r\n          {...field}\r\n          {...props}\r\n        />\r\n      )}\r\n\r\n      {props.type === \"password\" && (\r\n        <StyledTextInput\r\n          invalid={meta.touched && meta.error}\r\n          {...field}\r\n          {...props}\r\n          type={show ? \"text\" : \"password\"}\r\n        />\r\n      )}\r\n\r\n      <StyledIcon>{icon}</StyledIcon>\r\n\r\n      {props.type === \"password\" && (\r\n        <StyledIcon onClick={() => setShow(!show)} right>\r\n          {show && <FiEye />}\r\n          {!show && <FiEyeOff />}\r\n        </StyledIcon>\r\n      )}\r\n\r\n      {meta.touched && meta.error ? (\r\n        <ErrorMsg>{meta.error}</ErrorMsg>\r\n      ) : (\r\n        <ErrorMsg style={{ visibility: \"hidden\" }}>.</ErrorMsg>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}